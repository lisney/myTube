MongoDB 설치
윈도우

//MongoDB 공식 홈페이지의 다운로드 페이지에서 MSI 파일로 설치하면
C:\Program Files\MongoDB\Server\3.2\bin\ 에 설치됩니다.

//CMD 창을 열어서 디렉토리로 들어가 mongod 를 실행하면 서버가 실행됩니다.
기본 데이터베이스 디렉토리가 C:\data\db 이므로 실행 전에 폴더를 수동으로 만들어주셔야합니다.

//데이터베이스 디렉토리를 변경하고싶다면 다음과같이 실행하면 됩니다.
C:\Program Files\MongoDB\Server\3.2\bin> mongod --dbpath "c:\custom_folder"

//매번 MongoDB 설치 경로로 이동하는게 귀찮다면, 해당 디렉토리를 환경변수의 PATH 에 추가하세요.
(윈도우 10 이하 버전에서는
기존 값 ; C:\Program Files\MongoDB\Server\3.2\bin 이런식으로 수정해야합니다.)

root/1234

mongodb+srv://root:<password>@education-kv3ka.mongodb.net/test?retryWrites=true&w=majority

로컬 서버
mongodb://127.0.0.1:27017


[Postman]
보내는 타입 설정 // header에 json 타입이라고 정의하는 방법
KEY : Content-type
VALUE : aplication/json

보내는 내용 // body에 json 타입으로 기입한다


>>몽고DB 사이트
https://www.mongodb.com/download-center?jmp=homepage#community
에서 프로그램 다운 설치

>>서버실행
커멘드셀에서 mongod

>>몽고db실행
mongo

>>DB 선택/생성
 use mongodb_tutorial

>>DB 삭제

>>db.dropDatabase() // 먼저 DB가 선택(use)되어 있어야한다.

>>show dbs // 생성된 디비를 보여준다

>> 컬렉션 생성
> db.createCollection("books") //("books",{...}), {...}옵션

>> 컬렉션 보기
> show collections

>>컬렉션 제거
> db.books.drop()

>>DB 추가
 db.books.insert({"name":"sample"}); //컬렉션 books이 없으면 자동생성해준다// name:'sample' 로 써도 된다

//컬렉션에 도큐먼트 추가하기
>db.book.insert({...})

//컬렉션의 도큐먼트 확인하기
>db.book.find()  // 깔끔하게 보려면 뒤에 .pretty() 를 붙인다.
>db.articles.find({"likes":{$lte:30}}).pretty()  // likes 값이 30이하인 도큐먼트만 조회(less than or equals)

//쿼리 연산자
$eq 	(equals) 주어진 값과 일치하는 값
$gt 	(greater than) 주어진 값보다 큰 값
$gte 	(greather than or equals) 주어진 값보다 크거나 같은 값
$lt 	(less than) 주어진 값보다 작은 값
$lte 	(less than or equals) 주어진 값보다 작거나 같은 값
$ne 	(not equal) 주어진 값과 일치하지 않는 값
$in 	주어진 배열 안에 속하는 값
$nin 	주어빈 배열 안에 속하지 않는 값

>db.articles.find({"likes":{$gt:10,$lt:30}}).pretty() //10보다 크고, 30보다 작다
>db.articles.find({"writer":{$in:["Alpha","Bravo"]}}).pretty()  // 주어진 배열 안에 속하는 값, 반대로는 $nin

>db.articles.find({$or:[{"title":"article01"},{"writer":"Alpha"}]})  //$or, $and, $not, $nor

>db.articles.find({$and:[{"writer":"Velopert"},{"likes":{$lt:10}}]})
=> 이렇게 해도 같은 결과 db.articles.find({"writer":"Velopert", "like":{$lt:10}})

>db.articles.find({"title":/article0[1-2]/})  // 정규식 article0[1-2]에 일치하는 값이 title에 있는 도큐먼트 조회
// "title":"article01", "title":"article02" 를 찾아준다

>>정렬
> db.orders.find().sort({_id:-1}).limit(3).skip(2).pretty()

// document를 수정하는 update() 메소드


//도큐먼트 제거
>db.book.remove(criteria, justOne)
*criteria 	document 	삭제 할 데이터의 기준 값 (criteria) 입니다. 이 값이 { } 이면 컬렉션의 모든 데이터를 제거합니다.
justOne 	boolean 	선택적(Optional) 매개변수이며 이 값이 true 면 1개 의 다큐먼트만 제거합니다. 이 매개변수가 생략되면 기본값은 false 로 서, criteria에 해당되는 모든 다큐먼트를 제거합니다.
>db.book.remove({... : ...})






